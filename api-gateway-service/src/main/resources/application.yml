server:
  port: 8180
spring:
  application:
    name: api-gateway-service
  cloud:
     gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      globalcors:
        corsConfigurations:
          '[/**]':
              allowedOrigins: "*"
              allowedMethods: "*"
              allowedHeaders: "*" 
      routes:
        - id: user-service
          uri: lb://user-service:8180
          predicates:
            - Path=/user/**
          filters:
            - name: CircuitBreaker
              args:
                name: user-service
                fallbackuri: forward:/userServiceFallback
#        - id: doctor-service
#          uri: lb://doctor-service:8280
#          predicates:
#            - Path=/doctor/**
#          filters:
#            - name: CircuitBreaker
#              args:
#                name: doctor-service
#                fallbackuri: forward:/doctorServiceFallback
#        - id: patient-service
#          uri: lb://patient-service:8380
#          predicates:
#            - Path=/patient/**
#          filters:
#            - name: CircuitBreaker
#              args:
#                name: patient-service
#                fallbackuri: forward:/patientServiceFallback

# Log Configuration
logging:
  level:
    root: INFO
    com:
      demo: TRACE
      
# Eureka Client
eureka:
  instance:
    hostname: localhost
  client:
    register-with-eureka: true
    service-url:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka/}
      
# Prometheus
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'